name: Terraform Pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action to perform (init, validate, plan, apply)'
        required: true
        default: 'plan'
        type: choice
        options:
          - init
          - validate
          - plan
          - apply
      target_table:
        description: 'Table name to target (e.g., table1) - required for plan and apply'
        required: false
        default: ''

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # You can hardcode the region or use a secret

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      # Run Terraform Init
      - name: Terraform Init
        if: ${{ github.event.inputs.action == 'init' }}
        run: terraform init

      # Run Terraform Validate
      - name: Terraform Validate
        if: ${{ github.event.inputs.action == 'validate' }}
        run: terraform validate

      # Terraform Plan with exact format and required target_table
      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: |
          if [ "${{ github.event.inputs.target_table }}" != "" ]; then
            terraform plan --target='aws_dynamodb_table.dynamodb_tables["${{ github.event.inputs.target_table }}"]'
          else
            echo "Error: target_table input is required for terraform plan."
            exit 1
          fi

      # Terraform Apply with exact format and required target_table
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          if [ "${{ github.event.inputs.target_table }}" != "" ]; then
            terraform apply --target='aws_dynamodb_table.dynamodb_tables["${{ github.event.inputs.target_table }}"]' -auto-approve
          else
            echo "Error: target_table input is required for terraform apply."
            exit 1
          fi
